"""
–ü–∞–∫–µ—Ç —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
"""
import logging
from aiogram import Router, F
from aiogram.filters import Command, CommandStart
from aiogram.fsm.state import default_state
from aiogram.filters import StateFilter
from aiogram.filters.state import State
from aiogram import types

from bot.handlers.user_handlers import (
    start_command, show_main_menu, profile_menu, settings_menu,
    select_categories, toggle_category, select_cities, toggle_city,
    edit_phone, save_phone, my_requests, show_request,
    accept_request, reject_request, show_admin_message,
    select_subcategories, handle_subcategory_selection,
    UserStates
)
from bot.handlers.admin_handlers_aiogram import (
    admin_command, show_admin_menu, exit_admin_panel,
    admin_categories, admin_add_category, admin_save_category, admin_toggle_category,
    admin_cities, admin_add_city, admin_save_city, admin_toggle_city,
    admin_demo_generation, admin_generate_demo_request, admin_stats, admin_demo_stats,
    create_test_data, AdminStates, is_admin
)
from bot.handlers.help_handlers import help_command
from bot.handlers.error_handlers import register_error_handlers

logger = logging.getLogger(__name__)

def setup_handlers() -> Router:
    """
    –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–æ—É—Ç–µ—Ä —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ –∫–æ–º–∞–Ω–¥
    """
    router = Router()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ (–¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ª—é–±–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏)
    router.message.register(start_command, CommandStart())
    router.message.register(show_main_menu, Command("menu"))
    router.message.register(help_command, Command("help"))
    router.message.register(admin_command, Command("admin"))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    router.message.register(profile_menu, F.text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", StateFilter(UserStates.MAIN_MENU))
    router.message.register(my_requests, F.text == "üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏", StateFilter(UserStates.MAIN_MENU))
    router.message.register(settings_menu, F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", StateFilter(UserStates.MAIN_MENU))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è
    router.message.register(select_cities, F.text == "üèôÔ∏è –í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥–∞", StateFilter(UserStates.PROFILE_MENU))
    router.message.register(select_categories, F.text == "üîß –í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", StateFilter(UserStates.PROFILE_MENU))
    router.message.register(edit_phone, F.text == "üì± –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω", StateFilter(UserStates.PROFILE_MENU))
    router.message.register(select_subcategories, F.text == "üîç –í—ã–±—Ä–∞—Ç—å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏", StateFilter(UserStates.PROFILE_MENU))
    router.message.register(show_main_menu, F.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", StateFilter(UserStates.PROFILE_MENU))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    router.message.register(toggle_category, StateFilter(UserStates.SELECTING_CATEGORIES))
    router.message.register(show_main_menu, F.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", StateFilter(UserStates.SELECTING_CATEGORIES))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–æ–≤
    router.message.register(toggle_city, StateFilter(UserStates.SELECTING_CITIES))
    router.message.register(show_main_menu, F.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", StateFilter(UserStates.SELECTING_CITIES))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π
    router.message.register(handle_subcategory_selection, StateFilter(UserStates.SELECTING_SUBCATEGORIES))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    router.message.register(save_phone, StateFilter(UserStates.EDIT_PHONE))
    router.message.register(show_main_menu, F.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", StateFilter(UserStates.EDIT_PHONE))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–µ–Ω—é –∑–∞—è–≤–æ–∫
    router.message.register(show_main_menu, F.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", StateFilter(UserStates.MY_REQUESTS))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
    router.message.register(show_main_menu, F.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", StateFilter(UserStates.SETTINGS_MENU))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    router.message.register(show_admin_menu, F.text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", StateFilter(AdminStates.MAIN_MENU))
    router.message.register(admin_categories, F.text == "üîß –ö–∞—Ç–µ–≥–æ—Ä–∏–∏", StateFilter(AdminStates.MAIN_MENU))
    router.message.register(admin_cities, F.text == "üèôÔ∏è –ì–æ—Ä–æ–¥–∞", StateFilter(AdminStates.MAIN_MENU))
    router.message.register(admin_demo_generation, F.text == "ü§ñ –î–µ–º–æ-—Ä–µ–∂–∏–º", StateFilter(AdminStates.MAIN_MENU))
    router.message.register(admin_stats, F.text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", StateFilter(AdminStates.MAIN_MENU))
    router.message.register(create_test_data, F.text == "üß™ –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ", StateFilter(AdminStates.MAIN_MENU))
    router.message.register(exit_admin_panel, F.text == "üö™ –í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏", StateFilter(AdminStates.MAIN_MENU))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    router.message.register(admin_add_category, F.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é", StateFilter(AdminStates.CATEGORIES))
    router.message.register(admin_toggle_category, F.text.startswith(("‚úÖ", "‚ùå")), StateFilter(AdminStates.CATEGORIES))
    router.message.register(show_admin_menu, F.text == "üîô –ù–∞–∑–∞–¥", StateFilter(AdminStates.CATEGORIES))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    router.message.register(admin_save_category, StateFilter(AdminStates.ADD_CATEGORY))
    router.message.register(show_admin_menu, F.text == "üîô –û—Ç–º–µ–Ω–∞", StateFilter(AdminStates.ADD_CATEGORY))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≥–æ—Ä–æ–¥–æ–≤ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    router.message.register(admin_add_city, F.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –≥–æ—Ä–æ–¥", StateFilter(AdminStates.CITIES))
    router.message.register(admin_toggle_city, F.text.startswith(("‚úÖ", "‚ùå")), StateFilter(AdminStates.CITIES))
    router.message.register(show_admin_menu, F.text == "üîô –ù–∞–∑–∞–¥", StateFilter(AdminStates.CITIES))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    router.message.register(admin_save_city, StateFilter(AdminStates.ADD_CITY))
    router.message.register(show_admin_menu, F.text == "üîô –û—Ç–º–µ–Ω–∞", StateFilter(AdminStates.ADD_CITY))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    router.message.register(admin_generate_demo_request, F.text == "üîÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞—è–≤–∫—É", StateFilter(AdminStates.DEMO_GENERATION))
    router.message.register(admin_demo_stats, F.text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–µ–º–æ-–∑–∞—è–≤–æ–∫", StateFilter(AdminStates.DEMO_GENERATION))
    router.message.register(show_admin_menu, F.text == "üîô –ù–∞–∑–∞–¥", StateFilter(AdminStates.DEMO_GENERATION))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –µ—Å–ª–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª –Ω–∏ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö
    async def handle_unknown_message(message: types.Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.text}")
        await message.answer(
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã."
        )
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –Ω–∏–∑–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
    router.message.register(handle_unknown_message, F.text)
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –æ—à–∏–±–æ–∫
    register_error_handlers(router)
    
    return router