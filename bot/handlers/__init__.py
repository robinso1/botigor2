"""
–ü–∞–∫–µ—Ç —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
"""
from aiogram import Router
from aiogram.filters import Command, CommandStart
from aiogram.fsm.state import default_state

from bot.handlers.user_handlers import (
    start_command, show_main_menu, profile_menu, settings_menu,
    select_categories, toggle_category, select_cities, toggle_city,
    edit_phone, save_phone, my_requests, show_request,
    accept_request, reject_request, show_admin_message,
    UserStates
)
from bot.handlers.help_handlers import help_command
from bot.handlers.error_handlers import register_error_handlers

def setup_handlers() -> Router:
    """
    –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–æ—É—Ç–µ—Ä —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ –∫–æ–º–∞–Ω–¥
    """
    router = Router()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
    router.message.register(start_command, CommandStart(), state="*")
    router.message.register(show_main_menu, Command("menu"), state="*")
    router.message.register(help_command, Command("help"), state="*")
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    router.message.register(profile_menu, lambda msg: msg.text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", state=UserStates.MAIN_MENU)
    router.message.register(lambda msg, state: my_requests(msg, state, "all"), 
                           lambda msg: msg.text == "üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏", state=UserStates.MAIN_MENU)
    router.message.register(settings_menu, lambda msg: msg.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", state=UserStates.MAIN_MENU)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è
    router.message.register(select_cities, lambda msg: msg.text == "üèôÔ∏è –í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥–∞", state=UserStates.PROFILE_MENU)
    router.message.register(select_categories, lambda msg: msg.text == "üîß –í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", state=UserStates.PROFILE_MENU)
    router.message.register(edit_phone, lambda msg: msg.text == "üì± –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω", state=UserStates.PROFILE_MENU)
    router.message.register(show_main_menu, lambda msg: msg.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", state=UserStates.PROFILE_MENU)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    router.message.register(toggle_category, state=UserStates.SELECTING_CATEGORIES)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–æ–≤
    router.message.register(toggle_city, state=UserStates.SELECTING_CITIES)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    router.message.register(save_phone, state=UserStates.EDIT_PHONE)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
    router.message.register(lambda msg, state: msg.answer("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"), 
                           lambda msg: msg.text == "üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", state=UserStates.SETTINGS_MENU)
    router.message.register(show_main_menu, lambda msg: msg.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", state=UserStates.SETTINGS_MENU)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫
    router.message.register(lambda msg, state: my_requests(msg, state, "all"), 
                           lambda msg: msg.text == "üìã –í—Å–µ –∑–∞—è–≤–∫–∏", state=UserStates.MY_REQUESTS)
    router.message.register(lambda msg, state: my_requests(msg, state, "new"), 
                           lambda msg: msg.text == "üÜï –ù–æ–≤—ã–µ", state=UserStates.MY_REQUESTS)
    router.message.register(lambda msg, state: my_requests(msg, state, "accepted"), 
                           lambda msg: msg.text == "‚úÖ –ü—Ä–∏–Ω—è—Ç—ã–µ", state=UserStates.MY_REQUESTS)
    router.message.register(lambda msg, state: my_requests(msg, state, "rejected"), 
                           lambda msg: msg.text == "‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ", state=UserStates.MY_REQUESTS)
    router.message.register(show_main_menu, lambda msg: msg.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", state=UserStates.MY_REQUESTS)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è callback-–∑–∞–ø—Ä–æ—Å–æ–≤
    router.callback_query.register(show_request, lambda c: c.data.startswith("show_request_"))
    router.callback_query.register(accept_request, lambda c: c.data.startswith("accept_request_"))
    router.callback_query.register(reject_request, lambda c: c.data.startswith("reject_request_"))
    router.callback_query.register(lambda c, state: my_requests(c.message, state), 
                                  lambda c: c.data == "back_to_requests")
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã
    router.message.register(show_admin_message, Command("admin"))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –æ—à–∏–±–æ–∫
    register_error_handlers(router)
    
    return router 